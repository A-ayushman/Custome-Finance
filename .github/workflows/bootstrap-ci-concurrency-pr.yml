name: Bootstrap CI Concurrency PR

on:
  workflow_dispatch:

jobs:
  open-pr:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Add CI and Docs workflows with concurrency
        run: |
          mkdir -p .github/workflows

          cat > .github/workflows/ci.yml <<'YAML'
          name: CI
          on:
            push:
              branches: [ main, staging ]
            pull_request:
              branches: [ main ]
            workflow_dispatch:
          concurrency:
            group: ${{ github.workflow }}-${{ github.ref }}
            cancel-in-progress: true

          jobs:
            build-test:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-node@v4
                  with:
                    node-version: 20
                - run: npm ci
                - run: npm run -s test || echo "No tests yet"
                - run: npm run -s lint || echo "No linter configured"

            deploy-worker:
              if: github.ref == 'refs/heads/main'
              needs: build-test
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-node@v4
                  with:
                    node-version: 20
                - run: npm ci
                - name: Deploy Worker (production)
                  env:
                    CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  run: npm run -s deploy:worker

            deploy-pages-prod:
              if: github.ref == 'refs/heads/main'
              needs: build-test
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-node@v4
                  with:
                    node-version: 20
                - run: npm ci
                - name: Deploy Pages (production → odic-finance-production)
                  env:
                    CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  run: npx wrangler pages deploy public --project-name odic-finance-production --branch main

            deploy-staging-worker:
              if: github.ref == 'refs/heads/staging'
              needs: build-test
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-node@v4
                  with:
                    node-version: 20
                - run: npm ci
                - name: Deploy Worker (staging)
                  env:
                    CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  run: npm run -s deploy:worker:staging

            deploy-staging-pages:
              if: github.ref == 'refs/heads/staging'
              needs: build-test
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-node@v4
                  with:
                    node-version: 20
                - run: npm ci
                - name: Deploy Pages (staging → odic-finance-ui)
                  env:
                    CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  run: npx wrangler pages deploy public --project-name odic-finance-ui --branch staging
          YAML

          cat > .github/workflows/docs-release.yml <<'YAML'
          name: Docs PDFs & Release
          on:
            workflow_dispatch:
            push:
              tags:
                - 'v*.*'
          concurrency:
            group: ${{ github.workflow }}-${{ github.ref }}
            cancel-in-progress: true

          jobs:
            build-docs:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - name: Install md-to-pdf toolchain
                  run: |
                    sudo apt-get update
                    sudo apt-get install -y pandoc
                - name: Build PDFs from docs/*.md
                  run: |
                    mkdir -p artifacts
                    for f in docs/*.md; do
                      base="$(basename "$f" .md)"
                      pandoc "$f" -o "artifacts/${base}.pdf" || echo "Failed to convert $f"
                    done
                - name: Upload PDFs
                  uses: actions/upload-artifact@v4
                  with:
                    name: docs-pdfs
                    path: artifacts/*.pdf

            create-release:
              needs: build-docs
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - name: Download PDFs
                  uses: actions/download-artifact@v4
                  with:
                    name: docs-pdfs
                    path: artifacts
                - name: Create GitHub Release
                  uses: softprops/action-gh-release@v2
                  with:
                    files: artifacts/*.pdf
                  env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          YAML

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "ci(workflows): add concurrency and split Pages deploys (prod→odic-finance-production, staging→odic-finance-ui)"
          branch: ci/concurrency
          title: "CI: add concurrency and split Pages deploys"
          body: |
            - Add top-level concurrency to cancel in-progress runs per ref
            - main → odic-finance-production (dashboard.odicinternational.com)
            - staging → odic-finance-ui (dashboard-staging.odicinternational.com)
            - Add concurrency to docs-release.yml
          labels: ci
