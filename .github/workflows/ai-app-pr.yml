name: AI App PR
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Feature branch to push to'
        required: true
        default: 'feature/odic-ai-dev-update'
      base:
        description: 'Base branch to open PR against'
        required: true
        default: 'main'
      title:
        description: 'PR title'
        required: true
        default: 'chore: automated PR via odic-finance-ai-automation'
      body:
        description: 'PR body'
        required: false
        default: 'Automated PR created by odic-finance-ai-automation GitHub App.'
permissions:
  contents: write
  pull-requests: write
  actions: write
jobs:
  pr:
    runs-on: ubuntu-latest
    steps:
      - name: Mint installation token from App
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ github.event.repository.name }}

      - name: Checkout with App token
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0

      - name: Configure bot identity
        run: |
          git config user.name "odic-finance-ai-automation[bot]"
          git config user.email "odic-finance-ai-automation[bot]@users.noreply.github.com"

      - name: Make a change (placeholder) and push
        run: |
          BRANCH="${{ github.event.inputs.branch }}"
          git checkout -B "$BRANCH"
          mkdir -p .odic
          echo "updated: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > .odic/last_update.txt
          git add .odic/last_update.txt
          git commit -m "chore(odic): update marker via App token" || echo "no changes"
          git push -u origin "$BRANCH"

      - name: Create or update PR
        uses: actions/github-script@v7
        env:
          BRANCH: ${{ github.event.inputs.branch }}
          BASE: ${{ github.event.inputs.base }}
          TITLE: ${{ github.event.inputs.title }}
          BODY: ${{ github.event.inputs.body }}
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const branch = process.env.BRANCH || 'feature/odic-ai-dev-update';
            const base = process.env.BASE || 'main';
            const title = process.env.TITLE || 'chore: automated PR via odic-finance-ai-automation';
            const body = process.env.BODY || 'Automated PR created by odic-finance-ai-automation GitHub App.';

            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${branch}`,
              base
            });
            if (prs.length) {
              const pr = prs[0];
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                title, body
              });
              core.info(`PR exists: ${pr.html_url}`);
              core.setOutput('pr_url', pr.html_url);
            } else {
              const { data: pr } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: branch,
                base,
                title,
                body
              });
              core.info(`Created PR: ${pr.html_url}`);
              core.setOutput('pr_url', pr.html_url);
            }
