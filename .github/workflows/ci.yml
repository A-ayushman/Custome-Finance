name: CI on: push: branches: [ main, staging ] pull_request: branches: [ main ] workflow_dispatch:

jobs: build-test: runs-on: ubuntu-latest steps: - uses: actions/checkout@v4 - uses: actions/setup-node@v4 with: node-version: 20 - run: npm ci - run: npm run -s test || echo "No tests yet" - run: npm run -s lint || echo "No linter configured"

deploy-worker: if: github.ref == 'refs/heads/main' needs: build-test runs-on: ubuntu-latest steps: - uses: actions/checkout@v4 - uses: actions/setup-node@v4 with: node-version: 20 - run: npm ci - name: Deploy Worker (production) env: CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} run: | npm run -s deploy:worker

deploy-pages: if: github.ref == 'refs/heads/main' needs: build-test runs-on: ubuntu-latest steps: - uses: actions/checkout@v4 - uses: actions/setup-node@v4 with: node-version: 20 - run: npm ci - name: Deploy Pages (production) env: CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} run: | npx wrangler pages deploy public --project-name odic-finance-ui --branch main

deploy-staging-worker: if: github.ref == 'refs/heads/staging' needs: build-test runs-on: ubuntu-latest steps: - uses: actions/checkout@v4 - uses: actions/setup-node@v4 with: node-version: 20 - run: npm ci - name: Deploy Worker (staging) env: CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} run: | npm run -s deploy:worker:staging

deploy-staging-pages: if: github.ref == 'refs/heads/staging' needs: build-test runs-on: ubuntu-latest steps: - uses: actions/checkout@v4 - uses: actions/setup-node@v4 with: node-version: 20 - run: npm ci - name: Deploy Pages (staging) env: CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} run: | npx wrangler pages deploy public --project-name odic-finance-ui --branch staging
